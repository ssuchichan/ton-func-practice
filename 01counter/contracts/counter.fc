#include "imports/stdlib.fc";

;; inline：内联，建议编译器将指定的函数体插入并取代每一处调用该函数的地方，从而节省了每次调用该函数带来的额外时间开支
(int) load_data() inline {
    var ds = get_data().begin_parse();
    return (ds~load_uint(64));
}

;; impure：非纯，表示该函数可能修改合约的存储、发送消息、抛出异常、验证数据合法性
() save_data(int counter) impure inline {
    set_data(
        begin_cell()
        .store_uint(counter, 64)
        .end_cell()
    );
}

;; message
;;   - internal message
;;       - empty：接受TON coin的消息
;;       - non-empty：前32位是操作码
;;
;;   - external message
;;
() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    if (in_msg_body.slice_empty?()) {
        return ();
    }
    int op = in_msg_body~load_uint(32);
    var(counter) = load_data();
    if (op == 1) {
        save_data(counter + 1);
    }
}

;; method_id：所有的getter方法都应加上此修饰符
int counter() method_id {
    var (counter) = load_data();
    return counter;
}




















